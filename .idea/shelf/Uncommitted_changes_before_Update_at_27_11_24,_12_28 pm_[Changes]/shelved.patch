Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# Dependencies\nnode_modules\n.pnp\n.pnp.js\n\n# Local env files\n.env\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\n# Testing\ncoverage\n\n# Turbo\n.turbo\n\n# Vercel\n.vercel\n\n# Build Outputs\n.next/\nout/\nbuild\ndist\n\n\n# Debug\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Misc\n.DS_Store\n*.pem\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ b/.gitignore	(date 1732690687660)
@@ -36,3 +36,5 @@
 # Misc
 .DS_Store
 *.pem
+
+.idea
Index: apps/linkp-website/app/afterauth/page.tsx
===================================================================
diff --git a/apps/linkp-website/app/afterauth/page.tsx b/apps/linkp-website/app/afterauth/page.tsx
deleted file mode 100644
--- a/apps/linkp-website/app/afterauth/page.tsx	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ /dev/null	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
@@ -1,15 +0,0 @@
-"use client";
-
-import { auth } from "../auth";
-
-export const runtime = "edge";
-
-export default async function Home() {
-  const session = await auth();
-
-  return (
-    <div className="flex min-h-screen flex-col items-center">
-      {session && <pre>{JSON.stringify(session)}</pre>}
-    </div>
-  );
-}
Index: apps/linkp-website/components/templates/components/link-button.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/templates/components/link-button.tsx b/apps/linkp-website/components/templates/components/link-button.tsx
new file mode 100644
--- /dev/null	(date 1732690618987)
+++ b/apps/linkp-website/components/templates/components/link-button.tsx	(date 1732690618987)
@@ -0,0 +1,50 @@
+// src/components/templates/components/link-button.tsx
+import { cn } from "@/lib/utils";
+import { AvatarImage } from "@radix-ui/react-avatar";
+
+interface LinkButtonProps {
+  title: string;
+  url: string;
+  icon?: string;
+  backgroundColor?: string;
+  textColor?: string;
+  style?: "3d-shadow" | "flat" | "gradient";
+  className?: string;
+}
+
+export function LinkButton({
+  title,
+  url,
+  icon,
+  backgroundColor = "#ffffff",
+  textColor = "#000000",
+  style = "flat",
+  className,
+}: LinkButtonProps) {
+  const buttonStyles = {
+    "3d-shadow":
+      "transform hover:-translate-y-0.5 shadow-lg active:translate-y-0",
+    flat: "hover:opacity-90",
+    gradient: "bg-gradient-to-r hover:opacity-90",
+  };
+
+  return (
+    <a
+      href={url}
+      target="_blank"
+      rel="noopener noreferrer"
+      className={cn(
+        "w-full px-6 py-3 rounded-lg transition-all duration-200 flex items-center justify-center gap-2",
+        buttonStyles[style],
+        className
+      )}
+      style={{
+        backgroundColor,
+        color: textColor,
+      }}
+    >
+      {icon && <span>{icon}</span>}
+      <span className="font-medium">{title}</span>
+    </a>
+  );
+}
Index: apps/linkp-website/app/(onboarding)/onboarding/select-plan/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/select-plan/page.tsx b/apps/linkp-website/app/(onboarding)/onboarding/select-plan/page.tsx
new file mode 100644
--- /dev/null	(date 1732690618983)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/select-plan/page.tsx	(date 1732690618983)
@@ -0,0 +1,16 @@
+import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
+import { Check } from "lucide-react";``
+import { RadioGroupForm } from "./components/select-plan";
+
+export default function selectPlanPage() {
+  return (
+    <div className="bg-creme-100 relative h-dvh">
+      <div className="flex py-12 md:py-0 flex-col gap-8 h-screen items-center justify-start md:justify-center">
+        <div className="bg-coffee-200 px-2 py-1 rounded-full">
+          <h1 className="font-heading text-coffee-900">Select Plan</h1>
+        </div>
+        <RadioGroupForm />
+      </div>
+    </div>
+  );
+}
Index: apps/linkp-website/components/templates/components/social-icons.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/templates/components/social-icons.tsx b/apps/linkp-website/components/templates/components/social-icons.tsx
new file mode 100644
--- /dev/null	(date 1732690618988)
+++ b/apps/linkp-website/components/templates/components/social-icons.tsx	(date 1732690618988)
@@ -0,0 +1,51 @@
+// src/components/templates/components/social-icons.tsx
+import { Twitter, Instagram, Youtube, Music2 } from "lucide-react";
+import { SocialPlatform } from "@/lib/templates/types";
+import { cn } from "@/lib/utils";
+
+interface SocialIconsProps {
+  socials: SocialPlatform[];
+  layout?: "horizontal" | "vertical";
+  iconColor?: string;
+  className?: string;
+}
+
+const PLATFORM_ICONS = {
+  twitter: Twitter,
+  instagram: Instagram,
+  youtube: Youtube,
+  tiktok: Music2,
+  spotify: Music2,
+};
+
+export function SocialIcons({
+  socials,
+  layout = "horizontal",
+  iconColor = "#000000",
+  className,
+}: SocialIconsProps) {
+  return (
+    <div
+      className={cn(
+        "flex gap-4",
+        layout === "vertical" && "flex-col",
+        className
+      )}
+    >
+      {socials.map((social) => {
+        const Icon = PLATFORM_ICONS[social.platform];
+        return (
+          <a
+            key={social.platform}
+            href={social.url}
+            target="_blank"
+            rel="noopener noreferrer"
+            className="hover:opacity-80 transition-opacity"
+          >
+            <Icon style={{ color: iconColor }} className="w-6 h-6" />
+          </a>
+        );
+      })}
+    </div>
+  );
+}
Index: apps/linkp-website/components/templates/modern-yellow/styles.module.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/templates/modern-yellow/styles.module.css b/apps/linkp-website/components/templates/modern-yellow/styles.module.css
new file mode 100644
--- /dev/null	(date 1732690618989)
+++ b/apps/linkp-website/components/templates/modern-yellow/styles.module.css	(date 1732690618989)
@@ -0,0 +1,19 @@
+
+.container {
+  min-height: 100vh;
+  width: 100%;
+  padding: 2rem;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+}
+
+.content {
+  width: 100%;
+  max-width: 600px;
+  margin: 0 auto;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  padding-top: 2rem;
+}
\ No newline at end of file
Index: apps/linkp-website/components/templates/components/profile-section.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/templates/components/profile-section.tsx b/apps/linkp-website/components/templates/components/profile-section.tsx
new file mode 100644
--- /dev/null	(date 1732690618988)
+++ b/apps/linkp-website/components/templates/components/profile-section.tsx	(date 1732690618988)
@@ -0,0 +1,52 @@
+// src/components/templates/components/profile-section.tsx
+
+import { AvatarImage } from "@/components/ui/avatar";
+import { cn } from "@/lib/utils";
+
+interface ProfileSectionProps {
+  image: string;
+  name: string;
+  bio: string;
+  imageShape?: "circle" | "square";
+  imageSize?: "small" | "medium" | "large";
+  bioAlignment?: "left" | "center" | "right";
+  className?: string;
+}
+
+export function ProfileSection({
+  image,
+  name,
+  bio,
+  imageShape = "circle",
+  imageSize = "large",
+  bioAlignment = "center",
+  className,
+}: ProfileSectionProps) {
+  const sizeClasses = {
+    small: "w-16 h-16",
+    medium: "w-24 h-24",
+    large: "w-32 h-32",
+  };
+
+  return (
+    <div className={cn("flex flex-col items-center gap-4", className)}>
+      <AvatarImage
+        src={image}
+        alt={name}
+        className={cn(
+          sizeClasses[imageSize],
+          imageShape === "square" && "rounded-lg"
+        )}
+      />
+      <div
+        className={cn("text-center space-y-2", {
+          "text-left": bioAlignment === "left",
+          "text-right": bioAlignment === "right",
+        })}
+      >
+        <h1 className="text-2xl font-bold">{name}</h1>
+        <p className="text-gray-600">{bio}</p>
+      </div>
+    </div>
+  );
+}
Index: apps/linkp-website/components/templates/modern-yellow/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/templates/modern-yellow/index.tsx b/apps/linkp-website/components/templates/modern-yellow/index.tsx
new file mode 100644
--- /dev/null	(date 1732690618989)
+++ b/apps/linkp-website/components/templates/modern-yellow/index.tsx	(date 1732690618989)
@@ -0,0 +1,48 @@
+// src/components/templates/modern-yellow/index.tsx
+import { TemplateProps } from "@/lib/templates/types";
+import { ProfileSection } from "../components/profile-section";
+import { SocialIcons } from "../components/social-icons";
+import { LinkButton } from "../components/link-button";
+import styles from "./styles.module.css";
+
+export default function ModernYellowTemplate({ data, isEditing }: TemplateProps) {
+  const { config } = data;
+
+  return (
+    <div 
+      className={styles.container}
+      style={{ backgroundColor: config.backgroundColor }}
+    >
+      <div className={styles.content}>
+        <ProfileSection
+          image={config.profile.image}
+          name={config.profile.name}
+          bio={config.profile.bio}
+          className="mb-8"
+        />
+
+        {config.socials.length > 0 && (
+          <SocialIcons
+            socials={config.socials}
+            className="mb-8"
+          />
+        )}
+
+        <div className="space-y-4 w-full max-w-md">
+          {config.links.map((link) => (
+            <LinkButton
+              key={link.id}
+              title={link.title}
+              url={link.url}
+              icon={link.icon}
+              backgroundColor={link.backgroundColor}
+              textColor={link.textColor}
+              style="3d-shadow"
+            />
+          ))}
+        </div>
+      </div>
+    </div>
+  );
+}
+
Index: apps/linkp-website/app/(onboarding)/onboarding/welcome/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/welcome/page.tsx b/apps/linkp-website/app/(onboarding)/onboarding/welcome/page.tsx
new file mode 100644
--- /dev/null	(date 1732690618983)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/welcome/page.tsx	(date 1732690618983)
@@ -0,0 +1,35 @@
+import {Button} from "@/components/ui/button";
+import Link from "next/link";
+
+export default function WelcomePage() {
+    return (
+        <div
+            className="relative mx-auto mt-24 flex max-w-sm flex-col items-center px-3 text-center md:mt-32 md:px-8 lg:mt-48">
+            <div
+                className="animate-slide-up-fade relative flex w-auto items-center justify-center px-6 py-2 [--offset:20px] [animation-duration:1.3s] [animation-fill-mode:both]">
+                <div className="absolute inset-0 opacity-10">
+                    <div
+                        className="animate-pulse-scale absolute inset-0 rounded-full mix-blend-color-burn "></div>
+                    <div
+                        className="animate- ̰pulse-scale absolute inset-0 rounded-full mix-blend-color-burn"></div>
+                    <div
+                        className="animate-pulse-scale absolute inset-0 rounded-full mix-blend-color-burn"></div>
+                </div>
+                <h1 className="font-heading text-2xl">
+                    LINKP
+                </h1>
+            </div>
+            <div className="flex gap-4 flex-col mt-4">
+                <h4>Welcome to Linkp</h4>
+                <p className="font-sub-heading text-gray-500">
+                    Linkp gives you marketing superpowers with short links that stand out.
+                </p>
+            <Button>
+                <Link href="/onboarding/workspace">
+                Get Started
+                </Link>
+            </Button>
+            </div>
+        </div>
+    )
+}
\ No newline at end of file
Index: apps/linkp-website/app/(onboarding)/onboarding/link/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/link/page.tsx b/apps/linkp-website/app/(onboarding)/onboarding/link/page.tsx
new file mode 100644
--- /dev/null	(date 1732690618982)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/link/page.tsx	(date 1732690618982)
@@ -0,0 +1,19 @@
+type Props = {
+    searchParams: {
+        workspace?: string
+        workspaceSlug?: string
+    }
+}
+
+
+export default function LinkPage({searchParams}: Props) {
+    const { workspace, workspaceSlug } = searchParams
+
+    return (
+        <div>
+            <h1>Product Listing</h1>
+            {workspace && <p>Filtered by workspace: {workspace}</p>}
+            {workspaceSlug && <p>Sorted by: {workspaceSlug}</p>}
+        </div>
+    )
+}
\ No newline at end of file
Index: apps/linkp-website/lib/templates/types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/lib/templates/types.ts b/apps/linkp-website/lib/templates/types.ts
new file mode 100644
--- /dev/null	(date 1732690618993)
+++ b/apps/linkp-website/lib/templates/types.ts	(date 1732690618993)
@@ -0,0 +1,72 @@
+// src/lib/templates/types.ts
+
+export type SocialPlatform = {
+  platform: "twitter" | "instagram" | "tiktok" | "youtube" | "spotify";
+  url: string;
+  order: number;
+  icon?: string;
+};
+
+export type LinkButton = {
+  id: string;
+  title: string;
+  url: string;
+  icon?: string;
+  backgroundColor?: string;
+  textColor?: string;
+  order: number;
+};
+
+export type TemplateConfig = {
+  id: string;
+  name: string;
+  thumbnail: string;
+  description: string;
+  style: {
+    background: string;
+    buttonStyle: "3d-shadow" | "flat" | "gradient";
+    fontFamily: string;
+    socialIconColor: string;
+  };
+  sections: {
+    profile: {
+      imageShape: "circle" | "square";
+      imageSize: "small" | "medium" | "large";
+      bioAlignment: "left" | "center" | "right";
+    };
+    socials: {
+      layout: "horizontal" | "vertical";
+      style: "simple-icon" | "branded" | "text";
+    };
+    links: {
+      style: "colorful-3d" | "minimal" | "outline";
+      spacing: "compact" | "comfortable" | "spacious";
+    };
+  };
+  availability: {
+    isPublic: boolean;
+    allowedPlans: ("free" | "creator" | "business")[];
+    allowedUserTypes: ("regular" | "creator" | "business")[];
+  };
+};
+
+export type WorkspaceTemplate = {
+  templateId: string;
+  config: {
+    backgroundColor: string;
+    profile: {
+      image: string;
+      name: string;
+      bio: string;
+    };
+    socials: SocialPlatform[];
+    links: LinkButton[];
+  };
+};
+
+// Template component props type
+export type TemplateProps = {
+  data: WorkspaceTemplate;
+  isEditing?: boolean;
+  onUpdate?: (data: Partial<WorkspaceTemplate>) => void;
+};
\ No newline at end of file
Index: apps/linkp-website/app/(onboarding)/onboarding/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/layout.tsx b/apps/linkp-website/app/(onboarding)/onboarding/layout.tsx
new file mode 100644
--- /dev/null	(date 1732690618982)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/layout.tsx	(date 1732690618982)
@@ -0,0 +1,25 @@
+import type { Metadata } from "next";
+import { Inter } from "next/font/google";
+import "./globals.css";
+import { dmSans, newKansas, nunitoSans } from "@/public/assets/fonts/fonts";
+
+export const metadata: Metadata = {
+    title: "Onboarding for Linkp",
+    description: "Generated by create next app",
+};
+
+export default function RootLayout({
+                                       children,
+                                   }: Readonly<{
+    children: React.ReactNode;
+}>) {
+    return (
+        <html lang="en">
+        <body
+            className={`${nunitoSans.variable} ${newKansas.variable} ${dmSans.variable}`}
+        >
+        {children}
+        </body>
+        </html>
+    );
+}
Index: apps/linkp-website/app/(onboarding)/onboarding/workspace/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/workspace/page.tsx b/apps/linkp-website/app/(onboarding)/onboarding/workspace/page.tsx
new file mode 100644
--- /dev/null	(date 1732690618984)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/workspace/page.tsx	(date 1732690618984)
@@ -0,0 +1,100 @@
+'use client';
+
+import { MdWorkspaces } from "react-icons/md";
+import Link from "next/link";
+import {Input} from "@/components/ui/input";
+import {Tooltip, TooltipContent, TooltipProvider, TooltipTrigger} from "@/components/ui/tooltip";
+import {CiCircleQuestion} from "react-icons/ci";
+import {Button} from "@/components/ui/button";
+import {SetStateAction, useEffect, useState} from "react";
+import {useRouter} from "next/navigation";
+
+export default function WorkspacePage() {
+
+    const [parentValue, setParentValue] = useState("");
+    const [childValue, setChildValue] = useState("");
+    const router = useRouter();
+
+    useEffect(() => {
+        setChildValue(parentValue);
+    }, [parentValue]);
+
+    const handleParentValueChange = (e: React.ChangeEvent<HTMLInputElement>): void => {
+        setParentValue(e.target.value);
+    };
+    const handleChildValueChange = (e: React.ChangeEvent<HTMLInputElement>): void => {
+        setChildValue(e.target.value);
+    };
+
+    const handleSubmitButtonClick = () => {
+        const searchParams = new URLSearchParams({
+            workspace: parentValue,
+            workspaceSlug: childValue,
+        })
+        router.push(`/onboarding/link?${searchParams.toString()}`)
+    }
+
+
+    return (
+        <div className="h-dvh min-w-screen flex flex-col items-center">
+            <h1 className="absolute top-2 font-heading text-2xl">
+            Linkp
+        </h1>
+            <div className="mt-[12%] w-[25%] mx-auto">
+                <div className="flex flex-col justify-center items-center">
+                <div className="border border-gray-400 rounded-full p-2">
+                <MdWorkspaces className="h-4 w-4"  />
+                </div>
+                <h4 className="font-medium font-heading text-2xl">Create a workspace</h4>
+                    <Link href="/help/article/what-is-a-workspace">
+                    <p className="underline text-sm text-gray-600 font-paragraph">what is a workspace?</p>
+                    </Link>
+                </div>
+                <div className=" flex flex-col gap-8 items-start mt-8">
+                    <div className="w-[100%]">
+                        <div className="flex flex-row gap-2 items-start">
+                            <p className="font-paragraph text-xs pb-2">
+                                Workspace Name
+                            </p>
+                            <TooltipProvider>
+                                <Tooltip>
+                                    <TooltipTrigger><CiCircleQuestion className="text-gray-600"/></TooltipTrigger>
+                                    <TooltipContent>
+                                        <p>This is the name of your workspace on Linkp.co.</p>
+                                    </TooltipContent>
+                                </Tooltip>
+                            </TooltipProvider>
+                        </div>
+                    <Input className="text-xs" type="email" placeholder="Acme, Inc." onChange={handleParentValueChange} value={parentValue} />
+                    </div>
+                    <div className="w-[100%]">
+                        <div className="flex flex-row gap-2 items-start">
+                            <p className="font-paragraph text-xs pb-2">
+                                Workspace Slug
+                            </p>
+                            <TooltipProvider>
+                                <Tooltip>
+                                    <TooltipTrigger><CiCircleQuestion className="text-gray-600"/></TooltipTrigger>
+                                    <TooltipContent>
+                                        <p>This is your workspace&apos;s unique slug on Linkp.co. Also on which you will host your Page</p>
+                                    </TooltipContent>
+                                </Tooltip>
+                            </TooltipProvider>
+                        </div>
+                        <div className="flex flex-row">
+                        <div className="border border-gray-400 rounded-r-sm rounded-l-md p-2 text-center text-gray-500 text-xs bg-gray-100">
+                            linkp.co/
+                        </div>
+                        <Input className="rounded-l-sm border-l-0 text-xs" type="email" placeholder="Acme, Inc." onChange={handleChildValueChange}  value={childValue}
+                               />
+                        </div>
+                    </div>
+                    {/* todo: Add a check that your slug name is unique, fetch all from DB and then verify. `useDebounce` to call API when key stroke stopped, store the response. show the resposnse when button clicked*/}
+                    <Button className="w-[100%] text-xs" onClick={handleSubmitButtonClick}>
+                        Create workspace
+                    </Button>
+                    </div>
+                </div>
+            </div>
+            )
+            }
\ No newline at end of file
Index: apps/linkp-website/migrations/meta/_journal.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"version\": \"7\",\n  \"dialect\": \"postgresql\",\n  \"entries\": [\n    {\n      \"idx\": 0,\n      \"version\": \"7\",\n      \"when\": 1731728456009,\n      \"tag\": \"0000_freezing_storm\",\n      \"breakpoints\": true\n    },\n    {\n      \"idx\": 1,\n      \"version\": \"7\",\n      \"when\": 1731738792234,\n      \"tag\": \"0001_perpetual_ezekiel_stane\",\n      \"breakpoints\": true\n    }\n  ]\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/migrations/meta/_journal.json b/apps/linkp-website/migrations/meta/_journal.json
--- a/apps/linkp-website/migrations/meta/_journal.json	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ b/apps/linkp-website/migrations/meta/_journal.json	(date 1732690618996)
@@ -15,6 +15,13 @@
       "when": 1731738792234,
       "tag": "0001_perpetual_ezekiel_stane",
       "breakpoints": true
+    },
+    {
+      "idx": 2,
+      "version": "7",
+      "when": 1732002504966,
+      "tag": "0002_classy_sentry",
+      "breakpoints": true
     }
   ]
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b0d7a3b9-b614-490b-be46-025c202f6b41\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/apps/linkp-website/app/(onboarding)/onboarding/welcome/page.tsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/apps/linkp-website/app/authentication/components/user-auth-form.tsx\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/apps/linkp-website/app/authentication/page.tsx\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/apps/linkp-website/app/layout.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/linkp-website/app/layout.tsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/apps/linkp-website/app/test/page.tsx\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/apps/linkp-website/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/linkp-website/package.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/apps/linkp-website/tailwind.config.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/linkp-website/tailwind.config.ts\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/pnpm-lock.yaml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pnpm-lock.yaml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 6\n}</component>\n  <component name=\"ProjectId\" id=\"2pKT6KocOnknYJaKF4FaB9Jt6vO\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"dart.analysis.tool.window.visible\": \"false\",\n    \"git-widget-placeholder\": \"drizzle-auth-neon\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"pnpm\",\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\n    \"ts.external.directory.path\": \"/Users/abdulraheem/Developer/Next/linkp/node_modules/typescript/lib\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  },\n  \"keyToStringList\": {\n    \"com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File\": [\n      \"TypeScript JSX\"\n    ]\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/apps/linkp-website/app/(onboarding)/onboarding\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-WS-243.21565.180\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b0d7a3b9-b614-490b-be46-025c202f6b41\" name=\"Changes\" comment=\"\" />\n      <created>1732513591048</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1732513591048</updated>\n      <workItem from=\"1732513592691\" duration=\"70000\" />\n      <workItem from=\"1732513669847\" duration=\"620000\" />\n      <workItem from=\"1732514300295\" duration=\"20262000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n    <option name=\"exactExcludedFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/apps/linkp-website/server/benchmark.js\" />\n      </list>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ b/.idea/workspace.xml	(date 1732690650562)
@@ -4,16 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b0d7a3b9-b614-490b-be46-025c202f6b41" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/apps/linkp-website/app/(onboarding)/onboarding/welcome/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/linkp-website/app/authentication/components/user-auth-form.tsx" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/linkp-website/app/authentication/page.tsx" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/linkp-website/app/layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/linkp-website/app/layout.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/linkp-website/app/test/page.tsx" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/linkp-website/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/linkp-website/package.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/linkp-website/tailwind.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/linkp-website/tailwind.config.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pnpm-lock.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/pnpm-lock.yaml" afterDir="false" />
-    </list>
+    <list default="true" id="b0d7a3b9-b614-490b-be46-025c202f6b41" name="Changes" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -38,7 +29,6 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
     "dart.analysis.tool.window.visible": "false",
-    "git-widget-placeholder": "drizzle-auth-neon",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
@@ -76,7 +66,7 @@
       <updated>1732513591048</updated>
       <workItem from="1732513592691" duration="70000" />
       <workItem from="1732513669847" duration="620000" />
-      <workItem from="1732514300295" duration="20262000" />
+      <workItem from="1732514300295" duration="20506000" />
     </task>
     <servers />
   </component>
Index: apps/linkp-website/app/authentication/components/user-auth-form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/authentication/components/user-auth-form.tsx b/apps/linkp-website/app/(auth)/authentication/components/user-auth-form.tsx
rename from apps/linkp-website/app/authentication/components/user-auth-form.tsx
rename to apps/linkp-website/app/(auth)/authentication/components/user-auth-form.tsx
--- a/apps/linkp-website/app/authentication/components/user-auth-form.tsx	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ b/apps/linkp-website/app/(auth)/authentication/components/user-auth-form.tsx	(date 1732690618981)
@@ -1,11 +1,10 @@
 "use client";
 
-import * as React from "react";
-import { signIn } from "next-auth/react";
 import { Button } from "@/components/ui/button";
 import { Icons } from "@/components/ui/icons"; // You'll need to create this
 import { toast } from "@/components/ui/use-toast";
-import { redirect } from "next/navigation";
+import { signIn } from "next-auth/react";
+import * as React from "react";
 
 interface UserAuthFormProps extends React.HTMLAttributes<HTMLDivElement> {}
 
@@ -15,7 +14,7 @@
   const handleGoogleSignIn = async () => {
     setIsLoading(true);
     try {
-      await signIn("google", { redirectTo: "/afterauth" });
+      await signIn("google", { redirectTo: "/profile" });
     } catch (error) {
       toast({
         title: "Error",
Index: .idea/material_theme_project_new.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"MaterialThemeProjectNewConfig\">\n    <option name=\"metadata\">\n      <MTProjectMetadataState>\n        <option name=\"migrated\" value=\"true\" />\n        <option name=\"pristineConfig\" value=\"false\" />\n        <option name=\"userId\" value=\"-4ecfff6d:19361e62be3:-7ffe\" />\n      </MTProjectMetadataState>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/material_theme_project_new.xml b/.idea/material_theme_project_new.xml
--- a/.idea/material_theme_project_new.xml	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ b/.idea/material_theme_project_new.xml	(date 1732690705400)
@@ -3,9 +3,13 @@
   <component name="MaterialThemeProjectNewConfig">
     <option name="metadata">
       <MTProjectMetadataState>
+<<<<<<< HEAD
         <option name="migrated" value="true" />
         <option name="pristineConfig" value="false" />
         <option name="userId" value="-4ecfff6d:19361e62be3:-7ffe" />
+=======
+        <option name="userId" value="-4ecfff6d:19361e62be3:-7fff" />
+>>>>>>> 7c442c5ac19649e8f9b24e35460ccd6769de0e75
       </MTProjectMetadataState>
     </option>
   </component>
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1732690618979)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1732690618979)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
+  </profile>
+</component>
\ No newline at end of file
Index: apps/linkp-website/.env.development
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>AUTH_SECRET=\"bKepfX/xS+KwK1YJhOotGM2ByQreKwC5fWchDUZUg20=\"\nNEXTAUTH_URL=\"http://localhost:3000\"\n\nAUTH_GOOGLE_ID=\"606763139857-o8tsb2o6o0l2m2t0ao15o2cr0lj4id75.apps.googleusercontent.com\"\nAUTH_GOOGLE_SECRET=\"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\"\n\nNODE_ENV=development\n\nDATABASE_URL='postgresql://linkp-db_owner:ECyDGV14vBrf@ep-old-sky-a1nfjuhk.ap-southeast-1.aws.neon.tech/linkp-db?sslmode=require'\n\n\n\n# Github ACtions\nCLOUDFLARE_ACCOUNT_ID=\"3169de9a72d756f05d7bb3d465087a2a\"\nCLOUDFLARE_API_TOKEN='-CCCRcJm47mHlOUvauJiLVWeQM3Qo0jOrgbyLDcb'\n\nNEON_API_KEY='tk1evknb3hu0lfw31t2oozdpxczdb84ezk79957c0tmab84hldrgg03qgq86kest'\nGH_TOKEN='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'\nNEON_PROJECT_ID='morning-rice-24699225'
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/.env.development b/apps/linkp-website/.env.development
--- a/apps/linkp-website/.env.development	(revision 991e3ca55c7c40c57db4285f75bb85f2bd3663b9)
+++ b/apps/linkp-website/.env.development	(date 1732690618981)
@@ -6,7 +6,7 @@
 
 NODE_ENV=development
 
-DATABASE_URL='postgresql://linkp-db_owner:ECyDGV14vBrf@ep-old-sky-a1nfjuhk.ap-southeast-1.aws.neon.tech/linkp-db?sslmode=require'
+DATABASE_URL='postgresql://linkp-db_owner:ECyDGV14vBrf@ep-tiny-meadow-a1viaqxl.ap-southeast-1.aws.neon.tech/linkp-db?sslmode=require'
 
 
 
Index: .idea/linkp.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/linkp.iml b/.idea/linkp.iml
new file mode 100644
--- /dev/null	(date 1732690618979)
+++ b/.idea/linkp.iml	(date 1732690618979)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: apps/linkp-website/components/ui/form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/form.tsx b/apps/linkp-website/components/ui/form.tsx
new file mode 100644
--- /dev/null	(date 1732690618991)
+++ b/apps/linkp-website/components/ui/form.tsx	(date 1732690618991)
@@ -0,0 +1,178 @@
+"use client"
+
+import * as React from "react"
+import * as LabelPrimitive from "@radix-ui/react-label"
+import { Slot } from "@radix-ui/react-slot"
+import {
+  Controller,
+  ControllerProps,
+  FieldPath,
+  FieldValues,
+  FormProvider,
+  useFormContext,
+} from "react-hook-form"
+
+import { cn } from "@/lib/utils"
+import { Label } from "@/components/ui/label"
+
+const Form = FormProvider
+
+type FormFieldContextValue<
+  TFieldValues extends FieldValues = FieldValues,
+  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
+> = {
+  name: TName
+}
+
+const FormFieldContext = React.createContext<FormFieldContextValue>(
+  {} as FormFieldContextValue
+)
+
+const FormField = <
+  TFieldValues extends FieldValues = FieldValues,
+  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
+>({
+  ...props
+}: ControllerProps<TFieldValues, TName>) => {
+  return (
+    <FormFieldContext.Provider value={{ name: props.name }}>
+      <Controller {...props} />
+    </FormFieldContext.Provider>
+  )
+}
+
+const useFormField = () => {
+  const fieldContext = React.useContext(FormFieldContext)
+  const itemContext = React.useContext(FormItemContext)
+  const { getFieldState, formState } = useFormContext()
+
+  const fieldState = getFieldState(fieldContext.name, formState)
+
+  if (!fieldContext) {
+    throw new Error("useFormField should be used within <FormField>")
+  }
+
+  const { id } = itemContext
+
+  return {
+    id,
+    name: fieldContext.name,
+    formItemId: `${id}-form-item`,
+    formDescriptionId: `${id}-form-item-description`,
+    formMessageId: `${id}-form-item-message`,
+    ...fieldState,
+  }
+}
+
+type FormItemContextValue = {
+  id: string
+}
+
+const FormItemContext = React.createContext<FormItemContextValue>(
+  {} as FormItemContextValue
+)
+
+const FormItem = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => {
+  const id = React.useId()
+
+  return (
+    <FormItemContext.Provider value={{ id }}>
+      <div ref={ref} className={cn("space-y-2", className)} {...props} />
+    </FormItemContext.Provider>
+  )
+})
+FormItem.displayName = "FormItem"
+
+const FormLabel = React.forwardRef<
+  React.ElementRef<typeof LabelPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
+>(({ className, ...props }, ref) => {
+  const { error, formItemId } = useFormField()
+
+  return (
+    <Label
+      ref={ref}
+      className={cn(error && "text-destructive", className)}
+      htmlFor={formItemId}
+      {...props}
+    />
+  )
+})
+FormLabel.displayName = "FormLabel"
+
+const FormControl = React.forwardRef<
+  React.ElementRef<typeof Slot>,
+  React.ComponentPropsWithoutRef<typeof Slot>
+>(({ ...props }, ref) => {
+  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()
+
+  return (
+    <Slot
+      ref={ref}
+      id={formItemId}
+      aria-describedby={
+        !error
+          ? `${formDescriptionId}`
+          : `${formDescriptionId} ${formMessageId}`
+      }
+      aria-invalid={!!error}
+      {...props}
+    />
+  )
+})
+FormControl.displayName = "FormControl"
+
+const FormDescription = React.forwardRef<
+  HTMLParagraphElement,
+  React.HTMLAttributes<HTMLParagraphElement>
+>(({ className, ...props }, ref) => {
+  const { formDescriptionId } = useFormField()
+
+  return (
+    <p
+      ref={ref}
+      id={formDescriptionId}
+      className={cn("text-[0.8rem] text-muted-foreground", className)}
+      {...props}
+    />
+  )
+})
+FormDescription.displayName = "FormDescription"
+
+const FormMessage = React.forwardRef<
+  HTMLParagraphElement,
+  React.HTMLAttributes<HTMLParagraphElement>
+>(({ className, children, ...props }, ref) => {
+  const { error, formMessageId } = useFormField()
+  const body = error ? String(error?.message) : children
+
+  if (!body) {
+    return null
+  }
+
+  return (
+    <p
+      ref={ref}
+      id={formMessageId}
+      className={cn("text-[0.8rem] font-medium text-destructive", className)}
+      {...props}
+    >
+      {body}
+    </p>
+  )
+})
+FormMessage.displayName = "FormMessage"
+
+export {
+  useFormField,
+  Form,
+  FormItem,
+  FormLabel,
+  FormControl,
+  FormDescription,
+  FormMessage,
+  FormField,
+}
Index: apps/linkp-website/migrations/0002_classy_sentry.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/migrations/0002_classy_sentry.sql b/apps/linkp-website/migrations/0002_classy_sentry.sql
new file mode 100644
--- /dev/null	(date 1732690618994)
+++ b/apps/linkp-website/migrations/0002_classy_sentry.sql	(date 1732690618994)
@@ -0,0 +1,69 @@
+CREATE TABLE IF NOT EXISTS "account" (
+	"userId" text NOT NULL,
+	"type" text NOT NULL,
+	"provider" text NOT NULL,
+	"providerAccountId" text NOT NULL,
+	"refresh_token" text,
+	"access_token" text,
+	"expires_at" integer,
+	"token_type" text,
+	"scope" text,
+	"id_token" text,
+	"session_state" text,
+	CONSTRAINT "account_provider_providerAccountId_pk" PRIMARY KEY("provider","providerAccountId")
+);
+--> statement-breakpoint
+CREATE TABLE IF NOT EXISTS "authenticator" (
+	"credentialID" text NOT NULL,
+	"userId" text NOT NULL,
+	"providerAccountId" text NOT NULL,
+	"credentialPublicKey" text NOT NULL,
+	"counter" integer NOT NULL,
+	"credentialDeviceType" text NOT NULL,
+	"credentialBackedUp" boolean NOT NULL,
+	"transports" text,
+	CONSTRAINT "authenticator_userId_credentialID_pk" PRIMARY KEY("userId","credentialID"),
+	CONSTRAINT "authenticator_credentialID_unique" UNIQUE("credentialID")
+);
+--> statement-breakpoint
+CREATE TABLE IF NOT EXISTS "session" (
+	"sessionToken" text PRIMARY KEY NOT NULL,
+	"userId" text NOT NULL,
+	"expires" timestamp NOT NULL
+);
+--> statement-breakpoint
+CREATE TABLE IF NOT EXISTS "user" (
+	"id" text PRIMARY KEY NOT NULL,
+	"name" text,
+	"email" text,
+	"emailVerified" timestamp,
+	"image" text,
+	CONSTRAINT "user_email_unique" UNIQUE("email")
+);
+--> statement-breakpoint
+CREATE TABLE IF NOT EXISTS "verificationToken" (
+	"identifier" text NOT NULL,
+	"token" text NOT NULL,
+	"expires" timestamp NOT NULL,
+	CONSTRAINT "verificationToken_identifier_token_pk" PRIMARY KEY("identifier","token")
+);
+--> statement-breakpoint
+DROP TABLE "products" CASCADE;--> statement-breakpoint
+DROP TABLE "users" CASCADE;--> statement-breakpoint
+DO $$ BEGIN
+ ALTER TABLE "account" ADD CONSTRAINT "account_userId_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."user"("id") ON DELETE cascade ON UPDATE no action;
+EXCEPTION
+ WHEN duplicate_object THEN null;
+END $$;
+--> statement-breakpoint
+DO $$ BEGIN
+ ALTER TABLE "authenticator" ADD CONSTRAINT "authenticator_userId_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."user"("id") ON DELETE cascade ON UPDATE no action;
+EXCEPTION
+ WHEN duplicate_object THEN null;
+END $$;
+--> statement-breakpoint
+DO $$ BEGIN
+ ALTER TABLE "session" ADD CONSTRAINT "session_userId_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."user"("id") ON DELETE cascade ON UPDATE no action;
+EXCEPTION
+ WHEN duplicate_object THEN null;
+END $$;
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1732690618980)
+++ b/.idea/modules.xml	(date 1732690618980)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/linkp.iml" filepath="$PROJECT_DIR$/.idea/linkp.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: apps/linkp-website/migrations/meta/0002_snapshot.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/migrations/meta/0002_snapshot.json b/apps/linkp-website/migrations/meta/0002_snapshot.json
new file mode 100644
--- /dev/null	(date 1732690618995)
+++ b/apps/linkp-website/migrations/meta/0002_snapshot.json	(date 1732690618995)
@@ -0,0 +1,346 @@
+{
+  "id": "e87ca092-1c2c-4935-8045-92e5dfa644a8",
+  "prevId": "a4f08889-1dba-46b4-b79e-94ee0cd15065",
+  "version": "7",
+  "dialect": "postgresql",
+  "tables": {
+    "public.account": {
+      "name": "account",
+      "schema": "",
+      "columns": {
+        "userId": {
+          "name": "userId",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "type": {
+          "name": "type",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "provider": {
+          "name": "provider",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "providerAccountId": {
+          "name": "providerAccountId",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "refresh_token": {
+          "name": "refresh_token",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "access_token": {
+          "name": "access_token",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "expires_at": {
+          "name": "expires_at",
+          "type": "integer",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "token_type": {
+          "name": "token_type",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "scope": {
+          "name": "scope",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "id_token": {
+          "name": "id_token",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "session_state": {
+          "name": "session_state",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        }
+      },
+      "indexes": {},
+      "foreignKeys": {
+        "account_userId_user_id_fk": {
+          "name": "account_userId_user_id_fk",
+          "tableFrom": "account",
+          "tableTo": "user",
+          "columnsFrom": [
+            "userId"
+          ],
+          "columnsTo": [
+            "id"
+          ],
+          "onDelete": "cascade",
+          "onUpdate": "no action"
+        }
+      },
+      "compositePrimaryKeys": {
+        "account_provider_providerAccountId_pk": {
+          "name": "account_provider_providerAccountId_pk",
+          "columns": [
+            "provider",
+            "providerAccountId"
+          ]
+        }
+      },
+      "uniqueConstraints": {},
+      "policies": {},
+      "checkConstraints": {},
+      "isRLSEnabled": false
+    },
+    "public.authenticator": {
+      "name": "authenticator",
+      "schema": "",
+      "columns": {
+        "credentialID": {
+          "name": "credentialID",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "userId": {
+          "name": "userId",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "providerAccountId": {
+          "name": "providerAccountId",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "credentialPublicKey": {
+          "name": "credentialPublicKey",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "counter": {
+          "name": "counter",
+          "type": "integer",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "credentialDeviceType": {
+          "name": "credentialDeviceType",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "credentialBackedUp": {
+          "name": "credentialBackedUp",
+          "type": "boolean",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "transports": {
+          "name": "transports",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        }
+      },
+      "indexes": {},
+      "foreignKeys": {
+        "authenticator_userId_user_id_fk": {
+          "name": "authenticator_userId_user_id_fk",
+          "tableFrom": "authenticator",
+          "tableTo": "user",
+          "columnsFrom": [
+            "userId"
+          ],
+          "columnsTo": [
+            "id"
+          ],
+          "onDelete": "cascade",
+          "onUpdate": "no action"
+        }
+      },
+      "compositePrimaryKeys": {
+        "authenticator_userId_credentialID_pk": {
+          "name": "authenticator_userId_credentialID_pk",
+          "columns": [
+            "userId",
+            "credentialID"
+          ]
+        }
+      },
+      "uniqueConstraints": {
+        "authenticator_credentialID_unique": {
+          "name": "authenticator_credentialID_unique",
+          "nullsNotDistinct": false,
+          "columns": [
+            "credentialID"
+          ]
+        }
+      },
+      "policies": {},
+      "checkConstraints": {},
+      "isRLSEnabled": false
+    },
+    "public.session": {
+      "name": "session",
+      "schema": "",
+      "columns": {
+        "sessionToken": {
+          "name": "sessionToken",
+          "type": "text",
+          "primaryKey": true,
+          "notNull": true
+        },
+        "userId": {
+          "name": "userId",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "expires": {
+          "name": "expires",
+          "type": "timestamp",
+          "primaryKey": false,
+          "notNull": true
+        }
+      },
+      "indexes": {},
+      "foreignKeys": {
+        "session_userId_user_id_fk": {
+          "name": "session_userId_user_id_fk",
+          "tableFrom": "session",
+          "tableTo": "user",
+          "columnsFrom": [
+            "userId"
+          ],
+          "columnsTo": [
+            "id"
+          ],
+          "onDelete": "cascade",
+          "onUpdate": "no action"
+        }
+      },
+      "compositePrimaryKeys": {},
+      "uniqueConstraints": {},
+      "policies": {},
+      "checkConstraints": {},
+      "isRLSEnabled": false
+    },
+    "public.user": {
+      "name": "user",
+      "schema": "",
+      "columns": {
+        "id": {
+          "name": "id",
+          "type": "text",
+          "primaryKey": true,
+          "notNull": true
+        },
+        "name": {
+          "name": "name",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "email": {
+          "name": "email",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "emailVerified": {
+          "name": "emailVerified",
+          "type": "timestamp",
+          "primaryKey": false,
+          "notNull": false
+        },
+        "image": {
+          "name": "image",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": false
+        }
+      },
+      "indexes": {},
+      "foreignKeys": {},
+      "compositePrimaryKeys": {},
+      "uniqueConstraints": {
+        "user_email_unique": {
+          "name": "user_email_unique",
+          "nullsNotDistinct": false,
+          "columns": [
+            "email"
+          ]
+        }
+      },
+      "policies": {},
+      "checkConstraints": {},
+      "isRLSEnabled": false
+    },
+    "public.verificationToken": {
+      "name": "verificationToken",
+      "schema": "",
+      "columns": {
+        "identifier": {
+          "name": "identifier",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "token": {
+          "name": "token",
+          "type": "text",
+          "primaryKey": false,
+          "notNull": true
+        },
+        "expires": {
+          "name": "expires",
+          "type": "timestamp",
+          "primaryKey": false,
+          "notNull": true
+        }
+      },
+      "indexes": {},
+      "foreignKeys": {},
+      "compositePrimaryKeys": {
+        "verificationToken_identifier_token_pk": {
+          "name": "verificationToken_identifier_token_pk",
+          "columns": [
+            "identifier",
+            "token"
+          ]
+        }
+      },
+      "uniqueConstraints": {},
+      "policies": {},
+      "checkConstraints": {},
+      "isRLSEnabled": false
+    }
+  },
+  "enums": {},
+  "schemas": {},
+  "sequences": {},
+  "roles": {},
+  "policies": {},
+  "views": {},
+  "_meta": {
+    "columns": {},
+    "schemas": {},
+    "tables": {}
+  }
+}
\ No newline at end of file
Index: apps/linkp-website/components/ui/sheet.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/sheet.tsx b/apps/linkp-website/components/ui/sheet.tsx
new file mode 100644
--- /dev/null	(date 1732690618992)
+++ b/apps/linkp-website/components/ui/sheet.tsx	(date 1732690618992)
@@ -0,0 +1,140 @@
+"use client"
+
+import * as React from "react"
+import * as SheetPrimitive from "@radix-ui/react-dialog"
+import { cva, type VariantProps } from "class-variance-authority"
+import { X } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const Sheet = SheetPrimitive.Root
+
+const SheetTrigger = SheetPrimitive.Trigger
+
+const SheetClose = SheetPrimitive.Close
+
+const SheetPortal = SheetPrimitive.Portal
+
+const SheetOverlay = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Overlay>,
+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
+>(({ className, ...props }, ref) => (
+  <SheetPrimitive.Overlay
+    className={cn(
+      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
+      className
+    )}
+    {...props}
+    ref={ref}
+  />
+))
+SheetOverlay.displayName = SheetPrimitive.Overlay.displayName
+
+const sheetVariants = cva(
+  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
+  {
+    variants: {
+      side: {
+        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
+        bottom:
+          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
+        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
+        right:
+          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
+      },
+    },
+    defaultVariants: {
+      side: "right",
+    },
+  }
+)
+
+interface SheetContentProps
+  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
+    VariantProps<typeof sheetVariants> {}
+
+const SheetContent = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Content>,
+  SheetContentProps
+>(({ side = "right", className, children, ...props }, ref) => (
+  <SheetPortal>
+    <SheetOverlay />
+    <SheetPrimitive.Content
+      ref={ref}
+      className={cn(sheetVariants({ side }), className)}
+      {...props}
+    >
+      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
+        <X className="h-4 w-4" />
+        <span className="sr-only">Close</span>
+      </SheetPrimitive.Close>
+      {children}
+    </SheetPrimitive.Content>
+  </SheetPortal>
+))
+SheetContent.displayName = SheetPrimitive.Content.displayName
+
+const SheetHeader = ({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLDivElement>) => (
+  <div
+    className={cn(
+      "flex flex-col space-y-2 text-center sm:text-left",
+      className
+    )}
+    {...props}
+  />
+)
+SheetHeader.displayName = "SheetHeader"
+
+const SheetFooter = ({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLDivElement>) => (
+  <div
+    className={cn(
+      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
+      className
+    )}
+    {...props}
+  />
+)
+SheetFooter.displayName = "SheetFooter"
+
+const SheetTitle = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Title>,
+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
+>(({ className, ...props }, ref) => (
+  <SheetPrimitive.Title
+    ref={ref}
+    className={cn("text-lg font-semibold text-foreground", className)}
+    {...props}
+  />
+))
+SheetTitle.displayName = SheetPrimitive.Title.displayName
+
+const SheetDescription = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Description>,
+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
+>(({ className, ...props }, ref) => (
+  <SheetPrimitive.Description
+    ref={ref}
+    className={cn("text-sm text-muted-foreground", className)}
+    {...props}
+  />
+))
+SheetDescription.displayName = SheetPrimitive.Description.displayName
+
+export {
+  Sheet,
+  SheetPortal,
+  SheetOverlay,
+  SheetTrigger,
+  SheetClose,
+  SheetContent,
+  SheetHeader,
+  SheetFooter,
+  SheetTitle,
+  SheetDescription,
+}
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1732690618979)
+++ b/.idea/.gitignore	(date 1732690618979)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: apps/linkp-website/components/ui/dropdown-menu.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/dropdown-menu.tsx b/apps/linkp-website/components/ui/dropdown-menu.tsx
new file mode 100644
--- /dev/null	(date 1732690618990)
+++ b/apps/linkp-website/components/ui/dropdown-menu.tsx	(date 1732690618990)
@@ -0,0 +1,201 @@
+"use client"
+
+import * as React from "react"
+import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
+import { Check, ChevronRight, Circle } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const DropdownMenu = DropdownMenuPrimitive.Root
+
+const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
+
+const DropdownMenuGroup = DropdownMenuPrimitive.Group
+
+const DropdownMenuPortal = DropdownMenuPrimitive.Portal
+
+const DropdownMenuSub = DropdownMenuPrimitive.Sub
+
+const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
+
+const DropdownMenuSubTrigger = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
+    inset?: boolean
+  }
+>(({ className, inset, children, ...props }, ref) => (
+  <DropdownMenuPrimitive.SubTrigger
+    ref={ref}
+    className={cn(
+      "flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  >
+    {children}
+    <ChevronRight className="ml-auto" />
+  </DropdownMenuPrimitive.SubTrigger>
+))
+DropdownMenuSubTrigger.displayName =
+  DropdownMenuPrimitive.SubTrigger.displayName
+
+const DropdownMenuSubContent = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
+>(({ className, ...props }, ref) => (
+  <DropdownMenuPrimitive.SubContent
+    ref={ref}
+    className={cn(
+      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
+      className
+    )}
+    {...props}
+  />
+))
+DropdownMenuSubContent.displayName =
+  DropdownMenuPrimitive.SubContent.displayName
+
+const DropdownMenuContent = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
+>(({ className, sideOffset = 4, ...props }, ref) => (
+  <DropdownMenuPrimitive.Portal>
+    <DropdownMenuPrimitive.Content
+      ref={ref}
+      sideOffset={sideOffset}
+      className={cn(
+        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md",
+        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
+        className
+      )}
+      {...props}
+    />
+  </DropdownMenuPrimitive.Portal>
+))
+DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
+
+const DropdownMenuItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
+    inset?: boolean
+  }
+>(({ className, inset, ...props }, ref) => (
+  <DropdownMenuPrimitive.Item
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  />
+))
+DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
+
+const DropdownMenuCheckboxItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
+>(({ className, children, checked, ...props }, ref) => (
+  <DropdownMenuPrimitive.CheckboxItem
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    checked={checked}
+    {...props}
+  >
+    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+      <DropdownMenuPrimitive.ItemIndicator>
+        <Check className="h-4 w-4" />
+      </DropdownMenuPrimitive.ItemIndicator>
+    </span>
+    {children}
+  </DropdownMenuPrimitive.CheckboxItem>
+))
+DropdownMenuCheckboxItem.displayName =
+  DropdownMenuPrimitive.CheckboxItem.displayName
+
+const DropdownMenuRadioItem = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
+>(({ className, children, ...props }, ref) => (
+  <DropdownMenuPrimitive.RadioItem
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+      <DropdownMenuPrimitive.ItemIndicator>
+        <Circle className="h-2 w-2 fill-current" />
+      </DropdownMenuPrimitive.ItemIndicator>
+    </span>
+    {children}
+  </DropdownMenuPrimitive.RadioItem>
+))
+DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName
+
+const DropdownMenuLabel = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
+    inset?: boolean
+  }
+>(({ className, inset, ...props }, ref) => (
+  <DropdownMenuPrimitive.Label
+    ref={ref}
+    className={cn(
+      "px-2 py-1.5 text-sm font-semibold",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  />
+))
+DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
+
+const DropdownMenuSeparator = React.forwardRef<
+  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
+  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
+>(({ className, ...props }, ref) => (
+  <DropdownMenuPrimitive.Separator
+    ref={ref}
+    className={cn("-mx-1 my-1 h-px bg-muted", className)}
+    {...props}
+  />
+))
+DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
+
+const DropdownMenuShortcut = ({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLSpanElement>) => {
+  return (
+    <span
+      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
+      {...props}
+    />
+  )
+}
+DropdownMenuShortcut.displayName = "DropdownMenuShortcut"
+
+export {
+  DropdownMenu,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioItem,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuGroup,
+  DropdownMenuPortal,
+  DropdownMenuSub,
+  DropdownMenuSubContent,
+  DropdownMenuSubTrigger,
+  DropdownMenuRadioGroup,
+}
Index: apps/linkp-website/components/ui/card.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/card.tsx b/apps/linkp-website/components/ui/card.tsx
new file mode 100644
--- /dev/null	(date 1732690618990)
+++ b/apps/linkp-website/components/ui/card.tsx	(date 1732690618990)
@@ -0,0 +1,76 @@
+import * as React from "react"
+
+import { cn } from "@/lib/utils"
+
+const Card = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn(
+      "rounded-xl border bg-card text-card-foreground shadow",
+      className
+    )}
+    {...props}
+  />
+))
+Card.displayName = "Card"
+
+const CardHeader = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn("flex flex-col space-y-1.5 p-6", className)}
+    {...props}
+  />
+))
+CardHeader.displayName = "CardHeader"
+
+const CardTitle = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn("font-semibold leading-none tracking-tight", className)}
+    {...props}
+  />
+))
+CardTitle.displayName = "CardTitle"
+
+const CardDescription = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn("text-sm text-muted-foreground", className)}
+    {...props}
+  />
+))
+CardDescription.displayName = "CardDescription"
+
+const CardContent = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
+))
+CardContent.displayName = "CardContent"
+
+const CardFooter = React.forwardRef<
+  HTMLDivElement,
+  React.HTMLAttributes<HTMLDivElement>
+>(({ className, ...props }, ref) => (
+  <div
+    ref={ref}
+    className={cn("flex items-center p-6 pt-0", className)}
+    {...props}
+  />
+))
+CardFooter.displayName = "CardFooter"
+
+export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }
Index: apps/linkp-website/components/ui/avatar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/avatar.tsx b/apps/linkp-website/components/ui/avatar.tsx
new file mode 100644
--- /dev/null	(date 1732690618989)
+++ b/apps/linkp-website/components/ui/avatar.tsx	(date 1732690618989)
@@ -0,0 +1,50 @@
+"use client"
+
+import * as React from "react"
+import * as AvatarPrimitive from "@radix-ui/react-avatar"
+
+import { cn } from "@/lib/utils"
+
+const Avatar = React.forwardRef<
+  React.ElementRef<typeof AvatarPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
+>(({ className, ...props }, ref) => (
+  <AvatarPrimitive.Root
+    ref={ref}
+    className={cn(
+      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
+      className
+    )}
+    {...props}
+  />
+))
+Avatar.displayName = AvatarPrimitive.Root.displayName
+
+const AvatarImage = React.forwardRef<
+  React.ElementRef<typeof AvatarPrimitive.Image>,
+  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
+>(({ className, ...props }, ref) => (
+  <AvatarPrimitive.Image
+    ref={ref}
+    className={cn("aspect-square h-full w-full", className)}
+    {...props}
+  />
+))
+AvatarImage.displayName = AvatarPrimitive.Image.displayName
+
+const AvatarFallback = React.forwardRef<
+  React.ElementRef<typeof AvatarPrimitive.Fallback>,
+  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
+>(({ className, ...props }, ref) => (
+  <AvatarPrimitive.Fallback
+    ref={ref}
+    className={cn(
+      "flex h-full w-full items-center justify-center rounded-full bg-muted",
+      className
+    )}
+    {...props}
+  />
+))
+AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName
+
+export { Avatar, AvatarImage, AvatarFallback }
Index: apps/linkp-website/components/ui/skeleton.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/skeleton.tsx b/apps/linkp-website/components/ui/skeleton.tsx
new file mode 100644
--- /dev/null	(date 1732690618992)
+++ b/apps/linkp-website/components/ui/skeleton.tsx	(date 1732690618992)
@@ -0,0 +1,15 @@
+import { cn } from "@/lib/utils"
+
+function Skeleton({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLDivElement>) {
+  return (
+    <div
+      className={cn("animate-pulse rounded-md bg-primary/10", className)}
+      {...props}
+    />
+  )
+}
+
+export { Skeleton }
Index: apps/linkp-website/components/ui/radio-group.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/radio-group.tsx b/apps/linkp-website/components/ui/radio-group.tsx
new file mode 100644
--- /dev/null	(date 1732690618991)
+++ b/apps/linkp-website/components/ui/radio-group.tsx	(date 1732690618991)
@@ -0,0 +1,44 @@
+"use client"
+
+import * as React from "react"
+import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
+import { Circle } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const RadioGroup = React.forwardRef<
+  React.ElementRef<typeof RadioGroupPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
+>(({ className, ...props }, ref) => {
+  return (
+    <RadioGroupPrimitive.Root
+      className={cn("grid gap-2", className)}
+      {...props}
+      ref={ref}
+    />
+  )
+})
+RadioGroup.displayName = RadioGroupPrimitive.Root.displayName
+
+const RadioGroupItem = React.forwardRef<
+  React.ElementRef<typeof RadioGroupPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
+>(({ className, ...props }, ref) => {
+  return (
+    <RadioGroupPrimitive.Item
+      ref={ref}
+      className={cn(
+        "aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
+        className
+      )}
+      {...props}
+    >
+      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
+        <Circle className="h-3.5 w-3.5 fill-primary" />
+      </RadioGroupPrimitive.Indicator>
+    </RadioGroupPrimitive.Item>
+  )
+})
+RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName
+
+export { RadioGroup, RadioGroupItem }
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1732690618980)
+++ b/.idea/vcs.xml	(date 1732690618980)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: apps/linkp-website/components/ui/separator.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/separator.tsx b/apps/linkp-website/components/ui/separator.tsx
new file mode 100644
--- /dev/null	(date 1732690618992)
+++ b/apps/linkp-website/components/ui/separator.tsx	(date 1732690618992)
@@ -0,0 +1,31 @@
+"use client"
+
+import * as React from "react"
+import * as SeparatorPrimitive from "@radix-ui/react-separator"
+
+import { cn } from "@/lib/utils"
+
+const Separator = React.forwardRef<
+  React.ElementRef<typeof SeparatorPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
+>(
+  (
+    { className, orientation = "horizontal", decorative = true, ...props },
+    ref
+  ) => (
+    <SeparatorPrimitive.Root
+      ref={ref}
+      decorative={decorative}
+      orientation={orientation}
+      className={cn(
+        "shrink-0 bg-border",
+        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
+        className
+      )}
+      {...props}
+    />
+  )
+)
+Separator.displayName = SeparatorPrimitive.Root.displayName
+
+export { Separator }
Index: apps/linkp-website/components/ui/tabs.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/tabs.tsx b/apps/linkp-website/components/ui/tabs.tsx
new file mode 100644
--- /dev/null	(date 1732690618992)
+++ b/apps/linkp-website/components/ui/tabs.tsx	(date 1732690618992)
@@ -0,0 +1,55 @@
+"use client"
+
+import * as React from "react"
+import * as TabsPrimitive from "@radix-ui/react-tabs"
+
+import { cn } from "@/lib/utils"
+
+const Tabs = TabsPrimitive.Root
+
+const TabsList = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.List>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.List
+    ref={ref}
+    className={cn(
+      "inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground",
+      className
+    )}
+    {...props}
+  />
+))
+TabsList.displayName = TabsPrimitive.List.displayName
+
+const TabsTrigger = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.Trigger>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.Trigger
+    ref={ref}
+    className={cn(
+      "inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow",
+      className
+    )}
+    {...props}
+  />
+))
+TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
+
+const TabsContent = React.forwardRef<
+  React.ElementRef<typeof TabsPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
+>(({ className, ...props }, ref) => (
+  <TabsPrimitive.Content
+    ref={ref}
+    className={cn(
+      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
+      className
+    )}
+    {...props}
+  />
+))
+TabsContent.displayName = TabsPrimitive.Content.displayName
+
+export { Tabs, TabsList, TabsTrigger, TabsContent }
Index: apps/linkp-website/components/ui/label.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/label.tsx b/apps/linkp-website/components/ui/label.tsx
new file mode 100644
--- /dev/null	(date 1732690618991)
+++ b/apps/linkp-website/components/ui/label.tsx	(date 1732690618991)
@@ -0,0 +1,26 @@
+"use client"
+
+import * as React from "react"
+import * as LabelPrimitive from "@radix-ui/react-label"
+import { cva, type VariantProps } from "class-variance-authority"
+
+import { cn } from "@/lib/utils"
+
+const labelVariants = cva(
+  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
+)
+
+const Label = React.forwardRef<
+  React.ElementRef<typeof LabelPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
+    VariantProps<typeof labelVariants>
+>(({ className, ...props }, ref) => (
+  <LabelPrimitive.Root
+    ref={ref}
+    className={cn(labelVariants(), className)}
+    {...props}
+  />
+))
+Label.displayName = LabelPrimitive.Root.displayName
+
+export { Label }
Index: apps/linkp-website/hooks/use-mobile.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/hooks/use-mobile.tsx b/apps/linkp-website/hooks/use-mobile.tsx
new file mode 100644
--- /dev/null	(date 1732690618993)
+++ b/apps/linkp-website/hooks/use-mobile.tsx	(date 1732690618993)
@@ -0,0 +1,19 @@
+import * as React from "react"
+
+const MOBILE_BREAKPOINT = 768
+
+export function useIsMobile() {
+  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)
+
+  React.useEffect(() => {
+    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
+    const onChange = () => {
+      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
+    }
+    mql.addEventListener("change", onChange)
+    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
+    return () => mql.removeEventListener("change", onChange)
+  }, [])
+
+  return !!isMobile
+}
Index: apps/linkp-website/components/ui/tooltip.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/ui/tooltip.tsx b/apps/linkp-website/components/ui/tooltip.tsx
new file mode 100644
--- /dev/null	(date 1732690618992)
+++ b/apps/linkp-website/components/ui/tooltip.tsx	(date 1732690618992)
@@ -0,0 +1,32 @@
+"use client"
+
+import * as React from "react"
+import * as TooltipPrimitive from "@radix-ui/react-tooltip"
+
+import { cn } from "@/lib/utils"
+
+const TooltipProvider = TooltipPrimitive.Provider
+
+const Tooltip = TooltipPrimitive.Root
+
+const TooltipTrigger = TooltipPrimitive.Trigger
+
+const TooltipContent = React.forwardRef<
+  React.ElementRef<typeof TooltipPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
+>(({ className, sideOffset = 4, ...props }, ref) => (
+  <TooltipPrimitive.Portal>
+    <TooltipPrimitive.Content
+      ref={ref}
+      sideOffset={sideOffset}
+      className={cn(
+        "z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
+        className
+      )}
+      {...props}
+    />
+  </TooltipPrimitive.Portal>
+))
+TooltipContent.displayName = TooltipPrimitive.Content.displayName
+
+export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }
Index: apps/linkp-website/app/(onboarding)/onboarding/template/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/template/page.tsx b/apps/linkp-website/app/(onboarding)/onboarding/template/page.tsx
new file mode 100644
--- /dev/null	(date 1732690618983)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/template/page.tsx	(date 1732690618983)
@@ -0,0 +1,56 @@
+// 'use client';
+//
+// import { useSession } from "next-auth/react";
+// import { getAvailableTemplates } from "@/lib/templates/registry";
+// import { useState } from "react";
+// import {redirect} from "next/navigation";
+//
+// export default function TemplateSelection() {
+//     const { data: session } = useSession();
+//     const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);
+//
+//     // *  todo: Get current user from the Database using session User iD
+//     // * `subscriptionTier` is not available on Session User
+//     // Get templates available for user's plan
+//     const availableTemplates = getAvailableTemplates(
+//         session?.user?.subscriptionTier || 'free',
+//         session?.user?.userType || 'regular'
+//     );
+//
+//     const handleTemplateSelect = async (templateId: string) => {
+//         try {
+//             // Create workspace with selected template
+//             const response = await fetch('/api/workspaces', {
+//                 method: 'POST',
+//                 headers: { 'Content-Type': 'application/json' },
+//                 body: JSON.stringify({
+//                     templateId,
+//                     name: 'My Workspace', // Default name
+//                 }),
+//             });
+//
+//             if (!response.ok) throw new Error('Failed to create workspace');
+//
+//             // Redirect to customization
+//             redirect('/dashboard/setup/customize');
+//         } catch (error) {
+//             console.error('Error:', error);
+//         }
+//     };
+//
+//     return (
+//         <div className="container mx-auto py-8">
+//             <h1 className="text-3xl font-bold mb-8">Choose Your Template</h1>
+//             <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
+//                 {availableTemplates.map((template) => (
+//                     <TemplateCard
+//                         key={template.id}
+//                         template={template}
+//                         onSelect={() => handleTemplateSelect(template.id)}
+//                         isSelected={selectedTemplate === template.id}
+//                     />
+//                 ))}
+//             </div>
+//         </div>
+//     );
+// }
\ No newline at end of file
Index: apps/linkp-website/app/(onboarding)/onboarding/select-plan/components/select-plan.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/(onboarding)/onboarding/select-plan/components/select-plan.tsx b/apps/linkp-website/app/(onboarding)/onboarding/select-plan/components/select-plan.tsx
new file mode 100644
--- /dev/null	(date 1732690618982)
+++ b/apps/linkp-website/app/(onboarding)/onboarding/select-plan/components/select-plan.tsx	(date 1732690618982)
@@ -0,0 +1,175 @@
+"use client";
+
+import { z } from "zod";
+import { zodResolver } from "@hookform/resolvers/zod";
+
+import { Button } from "@/components/ui/button";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
+import { toast } from "@/hooks/use-toast";
+import { useForm } from "react-hook-form";
+import { Check } from "lucide-react";
+
+const FormSchema = z.object({
+  type: z.enum(["regular", "creator", "business"], {
+    required_error: "You need to select a notification type.",
+  }),
+});
+
+export function RadioGroupForm() {
+  const form = useForm<z.infer<typeof FormSchema>>({
+    resolver: zodResolver(FormSchema),
+  });
+
+  function onSubmit(data: z.infer<typeof FormSchema>) {
+    toast({
+      title: "You submitted the following values:",
+      description: (
+        <pre className="mt-2 w-[340px] rounded-md bg-slate-950 p-4">
+          <code className="text-white">{JSON.stringify(data, null, 2)}</code>
+        </pre>
+      ),
+    });
+  }
+
+  return (
+    <Form {...form}>
+      <form onSubmit={form.handleSubmit(onSubmit)} className="w-2/3 space-y-6">
+        <FormField
+          control={form.control}
+          name="type"
+          render={({ field }) => (
+            <FormItem className="space-y-3">
+              <FormControl>
+                <RadioGroup
+                  onValueChange={field.onChange}
+                  defaultValue={field.value}
+                  className="flex flex-col md:flex-row gap-4 md:gap-8"
+                >
+                  <FormItem className="flex items-center">
+                    <FormControl>
+                      <div className="border-2 rounded-2xl px-4 py-6 bg-white">
+                        <div className="flex items-center justify-between px-4 mb-4">
+                          <div className="bg-creme-200 px-4 py-1 rounded-full">
+                            <p>Regular</p>
+                          </div>
+                          <RadioGroupItem value="regular" />
+                        </div>
+                        <div className="flex gap-2 ">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-2">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-2">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-1 items-baseline mt-4">
+                          <p className="text-wrap font-bold font-heading text-2xl">
+                            $10{" "}
+                          </p>
+                          <p className="text-wrap text-zinc-600">/ month </p>
+                        </div>
+                      </div>
+                    </FormControl>
+                  </FormItem>
+                  <FormItem className="flex items-center space-x-3 space-y-0">
+                    <FormControl>
+                      <div className="border-2 border-green-600 rounded-2xl px-4 py-6 bg-white">
+                        <div className="flex items-center justify-between px-4 mb-4">
+                          <div className="bg-creme-200 px-4 py-1 rounded-full">
+                            <p>Creators</p>
+                          </div>
+                          <RadioGroupItem value="creator" />
+                        </div>
+                        <div className="flex gap-2 ">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-2">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-2">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-1 items-baseline mt-4">
+                          <p className="text-wrap font-bold font-heading text-2xl">
+                            $10{" "}
+                          </p>
+                          <p className="text-wrap text-zinc-600">/ month </p>
+                        </div>
+                      </div>
+                    </FormControl>
+                  </FormItem>
+                  <FormItem className="flex items-center space-x-3 space-y-0">
+                    <FormControl>
+                      <div className="border-2 rounded-2xl px-4 py-6 bg-white">
+                        <div className="flex items-center justify-between px-4 mb-4">
+                          <div className="bg-creme-200 px-4 py-1 rounded-full">
+                            <p>Business</p>
+                          </div>
+                          <RadioGroupItem value="business" />
+                        </div>
+                        <div className="flex gap-2 ">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-2">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-2">
+                          <Check className="h-7 w-5" />
+                          <p className="text-wrap">
+                            Lorem ipsum dolor sit amet,
+                          </p>
+                        </div>
+                        <div className="flex gap-1 items-baseline mt-4">
+                          <p className="text-wrap font-bold font-heading text-2xl">
+                            $10{" "}
+                          </p>
+                          <p className="text-wrap text-zinc-600">/ month </p>
+                        </div>
+                      </div>
+                    </FormControl>
+                  </FormItem>
+                </RadioGroup>
+              </FormControl>
+
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+        <Button type="submit">Next</Button>
+      </form>
+    </Form>
+  );
+}
Index: apps/linkp-website/components/templates/modern-yellow/config.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/components/templates/modern-yellow/config.ts b/apps/linkp-website/components/templates/modern-yellow/config.ts
new file mode 100644
--- /dev/null	(date 1732690618988)
+++ b/apps/linkp-website/components/templates/modern-yellow/config.ts	(date 1732690618988)
@@ -0,0 +1,29 @@
+
+// src/components/templates/modern-yellow/config.ts
+import { TemplateConfig } from "@/lib/templates/types";
+
+export const defaultConfig: TemplateConfig["style"] = {
+  background: "#FFE135",
+  buttonStyle: "3d-shadow",
+  fontFamily: "Inter",
+  socialIconColor: "#000000",
+};
+
+export const buttonPresets = [
+  {
+    backgroundColor: "#FF9B9B",
+    textColor: "#000000",
+  },
+  {
+    backgroundColor: "#9BDFFF",
+    textColor: "#000000",
+  },
+  {
+    backgroundColor: "#FFB800",
+    textColor: "#000000",
+  },
+  {
+    backgroundColor: "#B8FF9B",
+    textColor: "#000000",
+  },
+];
\ No newline at end of file
Index: apps/linkp-website/app/profile/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/app/profile/page.tsx b/apps/linkp-website/app/profile/page.tsx
new file mode 100644
--- /dev/null	(date 1732690618987)
+++ b/apps/linkp-website/app/profile/page.tsx	(date 1732690618987)
@@ -0,0 +1,32 @@
+import { auth } from "../auth";
+
+export const runtime = "edge";
+
+export default async function ProfilePage() {
+  const session = await auth();
+  /*
+        ? console.log(JSON.stringify(session));
+
+        {
+            user: {
+                id: '40fee5f0-dbb0-4a83-b313-2e7e1772bccb',
+                name: 'Abdul Raheem',
+                email: 'abdulraheemsayyed22@gmail.com',
+                emailVerified: null,
+                image: 'https://lh3.googleusercontent.com/a/ACg8ocL3tGLw2rYePL0Kj71Q58ovxDUldVxD6PYpUX5FJudD2UKIEynu=s96-c'
+            },
+            sessionToken: '801f59d9-bbaf-4087-b878-3e85be27ba58',
+            userId: '40fee5f0-dbb0-4a83-b313-2e7e1772bccb',
+            expires: '2024-12-19T07:58:43.658Z'
+        }
+
+    */
+
+  return (
+    <div>
+      {session && (
+        <div className="text-black font-bold">{JSON.stringify(session)}</div>
+      )}
+    </div>
+  );
+}
Index: apps/linkp-website/lib/templates/registry.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/linkp-website/lib/templates/registry.ts b/apps/linkp-website/lib/templates/registry.ts
new file mode 100644
--- /dev/null	(date 1732690618993)
+++ b/apps/linkp-website/lib/templates/registry.ts	(date 1732690618993)
@@ -0,0 +1,64 @@
+// src/lib/templates/registry.ts
+import { TemplateConfig } from './types';
+
+// Modern Yellow template configuration
+export const modernYellowConfig: TemplateConfig = {
+  id: "modern-yellow",
+  name: "Modern Yellow",
+  thumbnail: "/templates/modern-yellow/thumbnail.png",
+  description: "A modern, playful template with colorful 3D buttons",
+  style: {
+    background: "#FFE135",
+    buttonStyle: "3d-shadow",
+    fontFamily: "Inter",
+    socialIconColor: "#000000",
+  },
+  sections: {
+    profile: {
+      imageShape: "circle",
+      imageSize: "large",
+      bioAlignment: "center",
+    },
+    socials: {
+      layout: "horizontal",
+      style: "simple-icon",
+    },
+    links: {
+      style: "colorful-3d",
+      spacing: "comfortable",
+    },
+  },
+  availability: {
+    isPublic: true,
+    allowedPlans: ["free", "creator", "business"],
+    allowedUserTypes: ["regular", "creator", "business"],
+  },
+};
+
+// Template registry
+const templateRegistry: Record<string, TemplateConfig> = {
+  "modern-yellow": modernYellowConfig,
+  // Add more templates here
+};
+
+// Helper functions
+export function getAllTemplates(): TemplateConfig[] {
+  return Object.values(templateRegistry);
+}
+
+export function getTemplateById(id: string): TemplateConfig | null {
+  return templateRegistry[id] || null;
+}
+
+export function getAvailableTemplates(plan: string, userType: string): TemplateConfig[] {
+  return getAllTemplates().filter((template) => {
+    return (
+      template.availability.isPublic &&
+      template.availability.allowedPlans.includes(plan as any) &&
+    template.availability.allowedUserTypes.includes(userType as any)
+    );
+  });
+}
+
+// Export for type safety
+export type TemplateId = keyof typeof templateRegistry;
\ No newline at end of file
diff --git a/apps/linkp-website/types/index.ts b/apps/linkp-website/types/index.ts
new file mode 100644
diff --git a/apps/linkp-website/app/authentication/page.tsx b/apps/linkp-website/app/(auth)/authentication/page.tsx
rename from apps/linkp-website/app/authentication/page.tsx
rename to apps/linkp-website/app/(auth)/authentication/page.tsx
diff --git a/apps/linkp-website/lib/validations/template.ts b/apps/linkp-website/lib/validations/template.ts
new file mode 100644
